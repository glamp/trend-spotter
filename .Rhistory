library(RPostgreSQL)
drv = dbDriver("PostgreSQL")
conn = RPostgreSQL::dbConnect(drv=drv, user="greg", password="texas1845", db="kaggle")
dbGetQuery(conn, "select * from ts_fake;")
df = dbGetQuery(conn, "select * from ts_fake;")
nrow(df)
library(ggplot2)
p <- ggplot(aes(x=trans_date, y=value), data=df)
p + geom_point() +
facet_wrap(~variable)
plot(df)
p <- ggplot(aes(x=trans_date, y=value), data=df)
p + geom_point()
cumsum(runif(100))
sapply(1:100, function(x) cumsum(runif(100)))
df = sapply(1:100, function(x) cumsum(runif(100)))
df = sapply(1:10, function(x) cumsum(runif(100)))
df
plot(df)
df = data.frame(sapply(1:10, function(x) cumsum(runif(100))))
df
plot(df)
df = data.frame(sapply(1:10, function(x) cumsum(runif(100, -1, 1))))
plot(df)
plot(df)
df = data.frame(sapply(1:10, function(x) cumsum(runif(12, -1, 1))))
plot(df)
lines(df)
library(reshape2)
melt(df)
df.lng = melt(df)
p <- ggplot(aes(x=variable, y=value), data=df)
p + geom_point()
p <- ggplot(aes(x=variable, y=value, colour=variable), data=df)
p + geom_point()
p <- ggplot(aes(x=variable, y=value, colour=variable), data=df.lng)
p + geom_point()
p <- ggplot(aes(y=value, colour=variable), data=df.lng)
p + geom_point()
df = data.frame(sapply(1:10, function(x) cumsum(runif(12, -1, 1))))
df$x = 1:nrow(df)
df.lng = melt(df, id="x")
p <- ggplot(aes(x=x, y=value, colour=variable), data=df.lng)
p + geom_point()
p + geom_point() +
geom_line()
df
dist(df)
dist(df[,-11])
norm
?norm
normalize
normalize <- function(x) {
(x - min(x)) / (max(x) - min(x))
}
sapply(normalize, df)
sapply( df, normalize)
sapply(df, normalize)
plot(sapply(df, normalize))
sapply(df, normalize)
df.norm <- sapply(df, normalize)
df.norm$x <- 1:nrow(df.norm)
df.norm <- data.frame(sapply(df, normalize))
df.norm$x <- 1:nrow(df.norm)
head(df.norm)
head(df.norm)
df.norm
y = df$X1
y
sapply(df.norm, function(x) {
sapply(df.norm, function(x) {
cor(x, y)
})
y
y = df[,2]
sapply(df.norm, function(x) { cor(x, y) } )
sapply(df.norm, function(x) { cor(x, y) } )
sapply(df.norm, function(x) { order(cor(x, y)) } )
sapply(df.norm, function(x) { names(order(t(cor(x, y))) } )
sapply(df.norm, function(x) { names(order(t(cor(x, y)))) } )
sapply(df.norm, function(x) { (order(t(cor(x, y)))) } )
sapply(df.norm, function(x) {
cor(x, )
sapply(df.norm, function(x) {
cor(x, y)
})
sapply(df.norm, function(x) {
cor(x, y)
})
sapply(df.norm, function(x) {
t(cor(x, y))
})
sapply(df.norm, function(x) {
test = sapply(df.norm, function(x) {
t(cor(x, y))
})
test
test = lapply(df.norm, function(x) {
t(cor(x, y))
})
test
library(reshap2)
library(reshape2)
ldply(df.norm, function(x) {
t(cor(x, y))
})
library(plyr)
ldply(df.norm, function(x) {
t(cor(x, y))
})
names(test) <- c("variable", "distance")
test = test[order(test$distance),]
order(test$distance),
order(test$distance)
test
test = ldply(df.norm, function(x) {
z = t(cor(x, y))
z
})
test
head(test)
str(test)
names(tesT)
names(tesTt)
names(test)
names(test) <- c("var", "o")
test
test$o
order(test$o)
test[order(test$o),]
test[order(test$o, decreasing=F),]
test[order(test$o, decreasing=T),]
test[order(test$o, decreasing=T),]
test = test[order(test$o, decreasing=T),]
library(ggplot2)
p <- ggplot(aes(x=x, y=value, colour=variable), data=df.lng)
p + geom_point()
p <- ggplot(aes(x=x, y=value, colour=variable), data=subset(df.lng, variable %in% c("X2", "X6"))
)
p + geom_point()
p + geom_point() + geom_line()
tet
test
test$o
test
df.norm
df.lng <- melt(df)
df.lng
df.lng$variable
df.lng$variable <- factor(df.lng$variable, levels=test$var)
df.lng
df.lng <- melt(df, id="x")
df.lng$variable <- factor(df.lng$variable, levels=test$var)
p <- ggplot(aes(x=x, y=variable), data=df.lng)
p + geom_point() + geom_line()
p + geom_point() + geom_line() +
facet_wrap(~varialbe)
p + geom_point() + geom_line() +
facet_wrap(~variable)
df.lng
p + geom_point() + geom_line() +
facet_wrap(~variable)
p <- ggplot(aes(x=x, y=value), data=df.lng)
p + geom_point() + geom_line() + facet_wrap(~variable)
p + geom_point() + geom_line() + facet_wrap(~variable, scales="free")
test
p <- ggplot(aes(x=x, y=value), data=subset(df.lng, variable %in% head(test$var))
)
p
p + geom_point() + geom_line() + facet_wrap(~variable, ncol=1, scales="free")
p <- ggplot(aes(x=x, y=value), data=subset(df.lng, variable %in% head(test$var, 4)))
p + geom_point() + geom_line() + facet_wrap(~variable, ncol=1, scales="free")
p <- ggplot(aes(x=x, y=value), data=subset(df.lng, variable %in% head(test$var, 4)))
p + geom_point() + geom_line()
p <- ggplot(aes(x=x, y=value, colour=variable), data=subset(df.lng, variable %in% head(test$var, 4)))
p + geom_point() + geom_line()
p <- ggplot(aes(x=x, y=value, colour=variable), data=subset(df.lng, variable %in% head(test$var, 2)))
p + geom_point() + geom_line()
p <- ggplot(aes(x=x, y=value, colour=variable), data=subset(df.lng, variable %in% head(test$var, 3)))
p + geom_point() + geom_line()
y
df
source('~/.active-rstudio-document', echo=TRUE)
data <- read.csv("./sp500hst.txt", h=T)
head(data)
data.small <- subset(data, Ticker %in% c("GOOG", "AAPL", "GE")
data.small <- subset(data, Ticker %in% c("GOOG", "AAPL", "GE"))
data.small <- subset(data, Ticker %in% c("GOOG", "AAPL", "GE"))
head(data.small)
?dcast
dcast(data.small, Date ~ Ticker)
dcast(data.small, Date ~ Ticker + Close)
dcast(data.small, Date ~ Ticker, function(x) { x$Close })
dcast(data.small, Date ~ Ticker)
head(data.small)
data.small <- subset(data, Ticker %in% c("GOOG", "AAPL", "GE"))[,c("Date", "Ticker", "Close")]
head(data.small)
dcast(data.small, Date ~ Ticker)
data.small <- dcast(data.small, Date ~ Ticker)
data.small <- na.omit(data.small)
compare.lines(data.small, "AAPL")
compare.lines <- function(df, comp.var, format="long") {
# compare each line to each other line
df.cmp <- calc.similarity(df, comp.var)
# add a dummy column for an x dimension (this would be time)
df$x = 1:nrow(df)
# get into long format
df.lng = melt(df, id="x")
# re-order the variables based on their distance from the line we're investigating
df.lng$variable <- factor(df.lng$variable, levels=df.cmp$variable)
if (format=="long") {
df.lng
} else {
df
}
}
compare.lines(data.small, "AAPL")
head(data.small)
compare.lines(data.small[,-1], "AAPL")
data.lng <- compare.lines(data.small[,-1], "AAPL")
p <- ggplot(aes(x=x, y=value, colour=variable), data=data.lng)
p + geom_point() + geom_line()
p <- ggplot(aes(x=x, y=value), data=data.lng)
p + geom_point() +
geom_line() +
facet_wrap(~variable, scales="free")
data.lng <- compare.lines(data.small[,-1], "GE")
p <- ggplot(aes(x=x, y=value), data=data.lng)
p + geom_point() +
geom_line() +
facet_wrap(~variable, scales="free")
p <- ggplot(aes(x=x, y=value, colour=variable), data=data.lng)
p + geom_point() +
geom_line()
data.small <- data[,c("Date", "Ticker", "Close")]
head(data.small)
data.small <- dcast(data.small, Date ~ Ticker)
data.small <- na.omit(data.small)
head(data.small)
data.small <- data[,c("Date", "Ticker", "Close")]
data.small <- subset(data, Ticker %in% c("GOOG", "AAPL", "GE"))[,c("Date", "Ticker", "Close")]
data.small <- data[,c("Date", "Ticker", "Close")]
head(data.small)
head(data.small)
data.small <- dcast(data.small, Date ~ Ticker)
data.small
sapply(is.na, data.small)
sapply(data.small, is.na)
sapply(data.small, function(x) sum(is.na) / length(x))
sapply(data.small, function(x) sum(is.na(x)) / length(x))
pct.nas <- sapply(data.small, function(x) sum(is.na(x)) / length(x))
pct.nas > .01
data.small[,pct.nas > .01]
data.small <- data.small[,pct.nas > .01]
data.small <- data[,c("Date", "Ticker", "Close")]
head(data.small)
data.small <- dcast(data.small, Date ~ Ticker)
pct.nas <- sapply(data.small, function(x) sum(is.na(x)) / length(x))
data.small <- data.small[,pct.nas > .01]
data.small <- na.omit(data.small)
data.small <- data[,c("Date", "Ticker", "Close")]
head(data.small)
data.small <- dcast(data.small, Date ~ Ticker)
pct.nas <- sapply(data.small, function(x) sum(is.na(x)) / length(x))
data.small <- data.small[,pct.nas > .01]
head(data.small)
data.lng <- compare.lines(data.small[,-1], "GE")
data.lng <- compare.lines(data.small[,-1], "TLAB")
p <- ggplot(aes(x=x, y=value), data=data.lng)
p + geom_point() +
geom_line() +
facet_wrap(~variable, scales="free")
p <- ggplot(aes(x=x, y=value), data=data.lng)
data.lng
data.lng <- compare.lines(data.small[,-1], "TLAB")
p <- ggplot(aes(x=x, y=value), data=data.lng)
p + geom_point() +
geom_line() +
facet_wrap(~variable, scales="free")
library(zoo)
zoo::na.fill
?zoo::na.fill
na.fill(c(1, 2, NA, 4), "extend")
na.fill(c(1, 10, NA, 4), "extend")
na.fill(c(1, 10, NA, 4), "forward")
library(zoo)
normalize <- function(x) {
x <- na.fill(x, "extend")
(x - min(x)) / (max(x) - min(x))
}
data.lng <- compare.lines(data.small[,-1], "TLAB")
data.lng
source('~/.active-rstudio-document', echo=TRUE)
data.lng <- compare.lines(data.small[,-1], "TLAB")
head(data.lng)
head(data.lng$variable)
p <- ggplot(aes(x=x, y=value), data=subset(data.lng, variable %in% levels(data.lng$variable)[1:10])
p <- ggplot(aes(x=x, y=value),
p <- ggplot(aes(x=x, y=value),
data=subset(data.lng, variable %in% levels(data.lng$variable)[1:10]))
p + geom_point() +
geom_line() +
facet_wrap(~variable, scales="free")
warnings()
data.lng <- compare.lines(data.small[,-1], "AMZN")
head(data.lng$variable)
p <- ggplot(aes(x=x, y=value),
data=subset(data.lng, variable %in% levels(data.lng$variable)[1:12]))
p + geom_point() +
geom_line() +
facet_wrap(~variable, scales="free")
data.lng <- compare.lines(data.small[,-1], "MSFT")
p <- ggplot(aes(x=x, y=value),
data=subset(data.lng, variable %in% levels(data.lng$variable)[1:12]))
p + geom_point() +
geom_line() +
facet_wrap(~variable, scales="free")
p + stat_smooth() +
facet_wrap(~variable, scales="free")
p + stat_smooth(span=.2) +
facet_wrap(~variable, scales="free")
p + stat_smooth(span=.5) +
facet_wrap(~variable, scales="free")
p + stat_smooth(span=.5, se=F) +
facet_wrap(~variable, scales="free")
p + geom_point() +
stat_smooth(span=.5, se=F) +
facet_wrap(~variable, scales="free")
data.lng <- compare.lines(data.small[,-1], "GOOG")
p <- ggplot(aes(x=x, y=value),
data=subset(data.lng, variable %in% levels(data.lng$variable)[1:12]))
p + geom_point() +
geom_line() +
facet_wrap(~variable, scales="free")
data.lng <- compare.lines(data.small[,-1], "GOOG")
colnames(data.small)
data.lng <- compare.lines(data.small[,-1], "DELL")
p <- ggplot(aes(x=x, y=value),
data=subset(data.lng, variable %in% levels(data.lng$variable)[1:12]))
p + geom_point() +
geom_line() +
facet_wrap(~variable, scales="free")
p + geom_point() +
stat_smooth(span=.5, se=F) +
facet_wrap(~variable, scales="free")
p + stat_smooth(span=.5, se=F) +
facet_wrap(~variable, scales="free")
source('~/repos/trend-spotter/main.r', echo=TRUE)
# data from: http://pages.swcp.com/stocks/
data <- read.csv("./sp500hst.txt", h=T)
head(data)
data.small <- subset(data, Ticker %in% c("GOOG", "AAPL", "GE"))[,c("Date", "Ticker", "Close")]
data.small <- data[,c("Date", "Ticker", "Close")]
data.small <- dcast(data.small, Date ~ Ticker)
head(data$Date)
data.small$Date <- as.Date(data$Date)
data.small$Date <- as.Date(data.small$Date)
head(data$Date)
str(data.small$Date)
summary(data.small$Date)
data.small <- subset(data, Ticker %in% c("GOOG", "AAPL", "GE"))[,c("Date", "Ticker", "Close")]
data.small <- data[,c("Date", "Ticker", "Close")]
data.small <- dcast(data.small, Date ~ Ticker)
data.small$Date <- as.Date(data.small$Date, format="%Y%m%d")
summary(data.small$Date)
as.Date
data.small$Date
data.small <- data[,c("Date", "Ticker", "Close")]
data.small <- dcast(data.small, Date ~ Ticker)
data.small$Date
?as.Date
as.Date(data.small$Date, format="%Y%m%d")
summary(data.small$Date)
summary(data.small$Date)
data.small
data <- read.csv("./sp500hst.txt", h=T)
head(data)
data.small <- subset(data, Ticker %in% c("GOOG", "AAPL", "GE"))[,c("Date", "Ticker", "Close")]
data.small <- data[,c("Date", "Ticker", "Close")]
data.small <- dcast(data.small, Date ~ Ticker)
summary(data.small$Date)
head(data.small)
